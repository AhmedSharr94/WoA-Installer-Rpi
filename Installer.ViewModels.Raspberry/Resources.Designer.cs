//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Installer.Raspberry.ViewModels {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Installer.Raspberry.ViewModels.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inject the Post-OOBE drivers.
        /// </summary>
        public static string CannotInjectPostOobe {
            get {
                return ResourceManager.GetString("CannotInjectPostOobe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drivers have been injected correctly.
        /// </summary>
        public static string DriversInjectedSucessfully {
            get {
                return ResourceManager.GetString("DriversInjectedSucessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished.
        /// </summary>
        public static string Finished {
            get {
                return ResourceManager.GetString("Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, there are no post-OOBE drivers available to inject.
        ///The Core Package that is currently installed doesn&apos;t have an additional post-OOBE driver set..
        /// </summary>
        public static string NoPostOobeDrivers {
            get {
                return ResourceManager.GetString("NoPostOobeDrivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disclaimer Notice and Terms of Use.
        /// </summary>
        public static string TermsOfUseTitle {
            get {
                return ResourceManager.GetString("TermsOfUseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - This tool comes with no warranty. 
        ///- The authors can&apos;t be hold responsible for any damage it may cause to your PC or your data (disk drives).
        ///- Please, choose the target drive carefully. If you select the wrong drive accidentally you could potentially lose data in your PC/other connected drives.
        ///- This tool intended for usage with Raspberry Pi 3 **ONLY**.
        ///    
        ///By clicking &quot;OK&quot; you accept the aforementioned risks..
        /// </summary>
        public static string WarningNotice {
            get {
                return ResourceManager.GetString("WarningNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected .WIM file doesn&apos;t contain any image for ARM64. Please, select a .wim file that targets this architecture..
        /// </summary>
        public static string WimFileNoValidArchitecture {
            get {
                return ResourceManager.GetString("WimFileNoValidArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Done!
        ///Now, please, **eject the SD Card safely** to avoid data corruption issues and insert it into your Raspberry Pi.
        ///
        ///- Turn it on and wait for the UEFI console to load. 
        ///- Type &quot;exit&quot; + press [ENTER] and you will be presented with the **UEFI interface**
        ///- Go to the &apos;Boot Maintenance Manager&apos; menu and select &apos;Boot Options&apos;. Choose &apos;Change Boor Order&apos;
        ///- Select &apos;Change the order&apos;
        ///- Put the **&apos;SD/MMC on Broadcom SDHOST&apos;** as the first element.
        ///- **Save the changes**
        ///- Go back to the **Main Menu** a [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WindowsDeployedSuccessfully {
            get {
                return ResourceManager.GetString("WindowsDeployedSuccessfully", resourceCulture);
            }
        }
    }
}
